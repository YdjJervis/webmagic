<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:db.properties</value>
                <value>classpath:ws.properties</value>
            </list>
        </property>
    </bean>

    <!-- 定义数据源Bean，使用C3P0数据源实现 -->
    <bean id="dataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 指定连接数据库连接池的最大连接数 -->
        <!-- 指定连接数据库连接池的最小连接数 -->
        <!-- 指定连接数据库连接池的初始化连接数 -->
        <!-- 指定连接数据库连接池的连接的最大空闲时间 -->
        <property name="driverClass" value="${driverClassName}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="maxPoolSize" value="${maxActive}"/>
        <property name="initialPoolSize" value="${initialSize}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
        <property name="maxIdleTime" value="${maxIdleTime}"/>
    </bean>

    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
    <!--sqlSessionFactory:用这个id的话会报错-->
    <bean id="_sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:us/codecraft/webmagic/samples/amazon/mapper/*.xml</value>
                <value>classpath:us/codecraft/webmagic/samples/base/mapper/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 扫描mapper.java -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName">
        <property name="basePackage" value="us.codecraft.webmagic.samples"/>
        <property name="sqlSessionFactoryBeanName" value="_sqlSessionFactory"/>
    </bean>

    <!-- 自动扫描注解的bean -->
    <context:component-scan base-package="us.codecraft.webmagic,com.eccang"/>

    <!--配置事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"
                       no-rollback-for="java.lang.RuntimeException"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pc"
                      expression="execution(* us.codecraft.webmagic.samples.*.service.*.*(..))"/> <!--把事务控制在Service层 -->
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
    </aop:config>
    <!--配置事务-->

    <!--配置定时任务-->
    <task:scheduled-tasks>
        <!-- 每5秒 把未转换成URL的ASIN转成URL -->
        <task:scheduled ref="asinParseMonitor" method="execute" cron="0/10 * * * * ?"/>
        <!-- 每5秒 取一次需要爬取评论的URL -->
        <task:scheduled ref="reviewProcessor" method="execute" cron="0/15 * * * * ?"/>


        <!-- 每5秒 把未爬取过首页的的ASIN转换成URL -->
        <!--<task:scheduled ref="rootAsinMonitor" method="execute" cron="0/5 * * * * ?"/>
        &lt;!&ndash; 每5秒 爬取一次产品首页URL &ndash;&gt;
        <task:scheduled ref="productProcessor" method="execute" cron="0/5 * * * * ?"/>-->

        <!-- 每5秒 爬取一次处在监听状态的URL -->
       <!-- <task:scheduled ref="reviewMonitorProcessor" method="execute" cron="0/5 * * * * ?"/>
        &lt;!&ndash; 每30秒 检测一次被监听的Review是否状态有变化 &ndash;&gt;
        <task:scheduled ref="reviewIdMonitor" method="execute" cron="0/30 * * * * ?"/>

        &lt;!&ndash; 每5秒 检测是否需要爬取需要更新的ASIN &ndash;&gt;
        <task:scheduled ref="reviewUpdateProcessor" method="execute" cron="0/5 * * * * ?"/>
        &lt;!&ndash; 每半天 把ASIN转换成一次更新爬取的链接 &ndash;&gt;
        <task:scheduled ref="updateParseMonitor" method="execute" cron="0 0 */12 * * ?"/>-->

         <!--统计给定一批ASIN的评论总数和评论的页码数-->
        <!--<task:scheduled ref="reviewStatProcessor" method="execute" cron="0/10 * * * * ?"/>-->
        <!-- 测试log日志 -->
        <!--<task:scheduled ref="loggerTestTask" method="execute" cron="0/5 * * * * ?" />-->
    </task:scheduled-tasks>

</beans>